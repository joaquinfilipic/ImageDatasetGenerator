package ar.com.itba.ss.datasetgenerator;

import java.io.File;

import org.apache.cxf.spring.boot.autoconfigure.CxfAutoConfiguration;
import org.springframework.boot.autoconfigure.SpringBootApplication;

import com.google.gson.Gson;

import ar.com.itba.ss.datasetgenerator.configuration.Conf;
import ar.com.itba.ss.datasetgenerator.configuration.HardConf;
import ar.com.itba.ss.datasetgenerator.engine.imagegeneration.ImageGenerator;
import ar.com.itba.ss.datasetgenerator.engine.simulation.Simulator;
import ar.com.itba.ss.datasetgenerator.engine.utils.FileUtils;
import springfox.documentation.swagger2.annotations.EnableSwagger2;

@SpringBootApplication(exclude = CxfAutoConfiguration.class)
@EnableSwagger2
public class App {

	public static void main(String[] args) {
		
		HardConf hardConf = new HardConf();
		
		Gson gson = new Gson();
		Conf conf = gson.fromJson(FileUtils.readStringFromFile(new File(hardConf.getConfigFilePath())), Conf.class);
				
		if (conf.getCleanImagesDirectories()) {
			FileUtils.deleteFiles(hardConf.getRgbImagesDirectory());
			FileUtils.deleteFiles(hardConf.getIrImagesDirectory());
			FileUtils.deleteFiles(hardConf.getParticlesDirectory());
		}
		
		int simulationStartNumber = conf.getSimulationStartNumber();
				
		for (int i = 0; i < conf.getNumberOfSimulations(); i++) {
			
			// run simulation passing simulation number.
			Simulator simulator = new Simulator();
			int nextSimulationStartNumber = simulator.simulate(conf, hardConf, simulationStartNumber);
						
			// this is the number of files generated by the simulation.
			int generationCount = nextSimulationStartNumber - simulationStartNumber;
						
			// generate images for the simulation.
			ImageGenerator imageGenerator = new ImageGenerator();
			imageGenerator.generate(conf, hardConf, simulationStartNumber, generationCount);
			
			// update simulation number
			simulationStartNumber = nextSimulationStartNumber;
			
		}
		
	}
	
}
